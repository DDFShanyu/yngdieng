load("@npm_bazel_protractor//:index.bzl", "protractor_web_test_suite")
load("@npm_bazel_typescript//:index.bzl", "ts_library")

ts_library(
    name = "e2e_lib",
    testonly = 1,
    srcs = glob(["src/**/*.ts"]),
    data = [
        "//web/src:tsconfig.json",
    ],
    tsconfig = ":tsconfig.json",
    deps = [
        "@npm//@types/jasmine",
        "@npm//@types/node",
        "@npm//jasmine",
        "@npm//protractor",
        "@npm//jest-image-snapshot",
        "@npm//tslib",
    ],
)

protractor_web_test_suite(
    name = "prodserver_test",
    on_prepare = ":protractor.on-prepare.js",
    server = "//web/src:prodserver",
    deps = [":e2e_lib"],
    #browsers=["@io_bazel_rules_webtesting//browsers:chromium-local",
    #"@io_bazel_rules_webtesting//browsers:firefox-local"],
    #tags=["native"]
)

protractor_web_test_suite(
    name = "devserver_test",
    on_prepare = ":protractor.on-prepare.js",
    server = "//web/src:devserver",
    deps = [":e2e_lib"],
)

# Default target in this package is to run the e2e tests on the devserver.
# This is a faster round-trip but doesn't exercise production optimizations like
# code-splitting and lazy loading.
alias(
    name = "e2e",
    actual = "devserver_test",
)

load(":jest.bzl", "jest_test")

jest_test(
    name = "snapshot_test",
    srcs = [
         "babel.config.js",
        "src/snapshot/a.test.js",
        "index.test.js",
        "setupTests.js",
    ],
    jest_config = ":jest.config.js",
    tags = [
        # Need to set the pwd to avoid jest needing a runfiles helper
        # Windows users with permissions can use --enable_runfiles
        # to make this test work
        "no-bazelci-windows",
        # TODO: why does this fail almost all the time, but pass on local Mac?
        "no-bazelci-mac",
    ],
    deps = [
        "@npm//@babel/core",
        "@npm//@babel/preset-env",
        "@npm//@jest/transform",
        "@npm//babel-jest",
        "@npm//jest-puppeteer-preset",
    ],
)